name: Build PuerNya (darwin-arm64)
on:
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"

jobs:
  go:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.go.outputs.version }}
    steps:
      - name: Get Go version
        id: go
        run: |
          echo version=$(curl -sSL https://raw.githubusercontent.com/actions/go-versions/update-versions-manifest-file/versions-manifest.json \
            | jq -r 'map(.version) | sort_by(split(".") | map(tonumber)) | last') >> $GITHUB_OUTPUT

  puernya:
    runs-on: ubuntu-latest
    needs: go
    outputs:
      puernya_version: ${{ steps.puernya.outputs.puernya_version }}
      puernya_tags: ${{ steps.puernya.outputs.puernya_tags }}
      puernya_time: ${{ steps.puernya.outputs.puernya_time }}
    steps:
      - name: Checkout building branch
        uses: actions/checkout@v4
        with:
          repository: PuerNya/sing-box
          ref: building
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.go.outputs.version }}

      - name: Get metadata
        id: puernya
        run: |
          git remote add upstream https://github.com/SagerNet/sing-box.git
          git fetch --tags upstream
          puernya_version=$(CGO_ENABLED=0 go run ./cmd/internal/read_tag)
          echo "puernya_version=$puernya_version" >> $GITHUB_OUTPUT
          echo puernya_tags=with_quic,with_dhcp,with_wireguard,with_shadowsocksr,with_ech,with_utls,with_clash_api,with_gvisor >> $GITHUB_OUTPUT
          puernya_time=$(git log -1 --format=%cd --date=format:'%Y-%m-%d' $(echo "$puernya_version" | awk -F'-' '{print $3}'))
          echo "puernya_time=$puernya_time" >> $GITHUB_OUTPUT

  build:
    strategy:
      matrix:
        include:
          - { name: darwin-arm64, goos: darwin, goarch: arm64 }
    runs-on: ubuntu-latest
    needs: [go, puernya]
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: 0
      TAGS: ${{ needs.puernya.outputs.puernya_tags }}
      VERSION: ${{ needs.puernya.outputs.puernya_version }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          repository: PuerNya/sing-box
          ref: building

      - name: Patch code
        run: sed -i 's/sniffHosts/sniffHost/' ./experimental/clashapi/trafficontrol/tracker.go

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.go.outputs.version }}

      - name: Build binary
        run: |
          go build -v -trimpath \
            -ldflags "-checklinkname=0 \
            -X 'github.com/sagernet/sing-box/constant.Version=${VERSION}' \
            -s -w -buildid=" \
            -tags "${TAGS}" \
            ./cmd/sing-box

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: sing-box-${{ matrix.name }}
          path: sing-box*
          compression-level: 9

  release:
    needs: [build, puernya]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Package binary
        run: |
          mkdir -p release
          mv artifacts/sing-box-darwin-arm64/sing-box release/
          chmod +x release/sing-box
          tar -czvf release/sing-box-puernya-darwin-arm64.tar.gz -C release sing-box

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: "PuerNya Build (${{ needs.puernya.outputs.puernya_time }})"
          tag_name: puernya-${{ needs.puernya.outputs.puernya_version }}
          body: | 
            🚀 自动构建版本: ${{ needs.puernya.outputs.puernya_version }}
            📅 构建时间: ${{ needs.puernya.outputs.puernya_time }}
            🔧 支持特性: ${{ needs.puernya.outputs.puernya_tags }}
          files: |
            release/sing-box-puernya-darwin-arm64.tar.gz
